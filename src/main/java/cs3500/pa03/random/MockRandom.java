package cs3500.pa03.random;

/**
 * A randomable object used for testing, since we know what the output will be.
 */
public class MockRandom implements Randomable {
  private int index = 0;
  private final int[] numbers =
      new int[] {0, 3, 4, 3, 3, 1, 2, 3, 2, 1, 2, 4, 4, 5, 3, 4, 6, 2, 1, 4, 5, 5, 3, 4, 4, 3, 3,
          2, 4, 9, 8, 5, 4, 3, 4, 5, 2, 1, 3, 4, 15, 6, 5, 14, 3, 23, 32, 123, 10, 11, 12, 83, 23,
          19, 13, 14, 32, 8, 4, 3, 6, 83, 43, 53, 223, 14, 13, 12, 10, 9, 8, 8, 59, 32, 43, 9, 1,
          2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 0, 0, 0, 1, 2, 0, 0, 2, 3, 4, 2, 3, 4, 5, 3, 5, 7, 3,
          2, 1, 2, 3, 2, 0};

  /**
   * Returns the next integer generated by this mock, and increments its index by one.
   *
   * @return - the next "random" integer from this mock
   */
  @Override
  public int nextInt() {
    int next = numbers[index];
    if (this.index < numbers.length - 1) {
      index++;
    } else {
      index = 0;
    }
    return next;
  }

  /**
   * Returns the nextInteger generated by this MockRandom which is less than the given bound.
   *
   * @param bound - the highest value (exclusive) our output can be.
   * @return - the next output from this random that is less than the given bound.
   */
  @Override
  public int nextInt(int bound) {
    while (true) {
      int next = this.nextInt();
      if (next < bound) {
        return next;
      }
    }
  }
}
